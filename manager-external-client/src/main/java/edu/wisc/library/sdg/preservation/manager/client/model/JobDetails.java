/*
 * Preservation Manager Public API
 * Public API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.model.JobState;
import edu.wisc.library.sdg.preservation.manager.client.model.JobType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * JobDetails
 */
@JsonPropertyOrder({
  JobDetails.JSON_PROPERTY_JOB_ID,
  JobDetails.JSON_PROPERTY_TYPE,
  JobDetails.JSON_PROPERTY_STATE,
  JobDetails.JSON_PROPERTY_RECEIVED_TIMESTAMP,
  JobDetails.JSON_PROPERTY_UPDATED_TIMESTAMP
})
@JsonTypeName("JobDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class JobDetails {
  public static final String JSON_PROPERTY_JOB_ID = "jobId";
  private Long jobId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private JobType type;

  public static final String JSON_PROPERTY_STATE = "state";
  private JobState state;

  public static final String JSON_PROPERTY_RECEIVED_TIMESTAMP = "receivedTimestamp";
  private OffsetDateTime receivedTimestamp;

  public static final String JSON_PROPERTY_UPDATED_TIMESTAMP = "updatedTimestamp";
  private OffsetDateTime updatedTimestamp;

  public JobDetails() { 
  }

  public JobDetails jobId(Long jobId) {
    
    this.jobId = jobId;
    return this;
  }

   /**
   * The id of a job
   * @return jobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10293", value = "The id of a job")
  @JsonProperty(JSON_PROPERTY_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getJobId() {
    return jobId;
  }


  @JsonProperty(JSON_PROPERTY_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }


  public JobDetails type(JobType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(JobType type) {
    this.type = type;
  }


  public JobDetails state(JobState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(JobState state) {
    this.state = state;
  }


  public JobDetails receivedTimestamp(OffsetDateTime receivedTimestamp) {
    
    this.receivedTimestamp = receivedTimestamp;
    return this;
  }

   /**
   * Timestamp the job was created
   * @return receivedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp the job was created")
  @JsonProperty(JSON_PROPERTY_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getReceivedTimestamp() {
    return receivedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReceivedTimestamp(OffsetDateTime receivedTimestamp) {
    this.receivedTimestamp = receivedTimestamp;
  }


  public JobDetails updatedTimestamp(OffsetDateTime updatedTimestamp) {
    
    this.updatedTimestamp = updatedTimestamp;
    return this;
  }

   /**
   * Timestamp the job was updated
   * @return updatedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp the job was updated")
  @JsonProperty(JSON_PROPERTY_UPDATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedTimestamp() {
    return updatedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedTimestamp(OffsetDateTime updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDetails jobDetails = (JobDetails) o;
    return Objects.equals(this.jobId, jobDetails.jobId) &&
        Objects.equals(this.type, jobDetails.type) &&
        Objects.equals(this.state, jobDetails.state) &&
        Objects.equals(this.receivedTimestamp, jobDetails.receivedTimestamp) &&
        Objects.equals(this.updatedTimestamp, jobDetails.updatedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, type, state, receivedTimestamp, updatedTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDetails {\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    receivedTimestamp: ").append(toIndentedString(receivedTimestamp)).append("\n");
    sb.append("    updatedTimestamp: ").append(toIndentedString(updatedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

