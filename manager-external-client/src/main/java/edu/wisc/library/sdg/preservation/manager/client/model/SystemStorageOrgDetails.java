/*
 * Preservation Manager Public API
 * Public API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SystemStorageOrgDetails
 */
@JsonPropertyOrder({
  SystemStorageOrgDetails.JSON_PROPERTY_ORG_NAME,
  SystemStorageOrgDetails.JSON_PROPERTY_DISPLAY_NAME,
  SystemStorageOrgDetails.JSON_PROPERTY_OBJECT_COUNT,
  SystemStorageOrgDetails.JSON_PROPERTY_STORAGE_MEGABYTES
})
@JsonTypeName("SystemStorageOrgDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SystemStorageOrgDetails {
  public static final String JSON_PROPERTY_ORG_NAME = "orgName";
  private String orgName;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_OBJECT_COUNT = "objectCount";
  private Long objectCount;

  public static final String JSON_PROPERTY_STORAGE_MEGABYTES = "storageMegabytes";
  private Long storageMegabytes;

  public SystemStorageOrgDetails() { 
  }

  public SystemStorageOrgDetails orgName(String orgName) {
    
    this.orgName = orgName;
    return this;
  }

   /**
   * The ID of the organization
   * @return orgName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "organization-id", value = "The ID of the organization")
  @JsonProperty(JSON_PROPERTY_ORG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrgName() {
    return orgName;
  }


  @JsonProperty(JSON_PROPERTY_ORG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrgName(String orgName) {
    this.orgName = orgName;
  }


  public SystemStorageOrgDetails displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the organization
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Organization Name", value = "The display name of the organization")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public SystemStorageOrgDetails objectCount(Long objectCount) {
    
    this.objectCount = objectCount;
    return this;
  }

   /**
   * The total number of objects in the org
   * @return objectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10293", value = "The total number of objects in the org")
  @JsonProperty(JSON_PROPERTY_OBJECT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getObjectCount() {
    return objectCount;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectCount(Long objectCount) {
    this.objectCount = objectCount;
  }


  public SystemStorageOrgDetails storageMegabytes(Long storageMegabytes) {
    
    this.storageMegabytes = storageMegabytes;
    return this;
  }

   /**
   * The approximate amount of space occupied by all object content files in the org in megabytes
   * @return storageMegabytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10293", value = "The approximate amount of space occupied by all object content files in the org in megabytes")
  @JsonProperty(JSON_PROPERTY_STORAGE_MEGABYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStorageMegabytes() {
    return storageMegabytes;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_MEGABYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageMegabytes(Long storageMegabytes) {
    this.storageMegabytes = storageMegabytes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemStorageOrgDetails systemStorageOrgDetails = (SystemStorageOrgDetails) o;
    return Objects.equals(this.orgName, systemStorageOrgDetails.orgName) &&
        Objects.equals(this.displayName, systemStorageOrgDetails.displayName) &&
        Objects.equals(this.objectCount, systemStorageOrgDetails.objectCount) &&
        Objects.equals(this.storageMegabytes, systemStorageOrgDetails.storageMegabytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orgName, displayName, objectCount, storageMegabytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemStorageOrgDetails {\n");
    sb.append("    orgName: ").append(toIndentedString(orgName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    objectCount: ").append(toIndentedString(objectCount)).append("\n");
    sb.append("    storageMegabytes: ").append(toIndentedString(storageMegabytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

