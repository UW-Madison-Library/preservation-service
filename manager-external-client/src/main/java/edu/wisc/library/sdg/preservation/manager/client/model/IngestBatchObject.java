/*
 * Preservation Manager Public API
 * Public API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.model.IngestObjectState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object within an Ingest Batch
 */
@ApiModel(description = "An object within an Ingest Batch")
@JsonPropertyOrder({
  IngestBatchObject.JSON_PROPERTY_INGEST_ID,
  IngestBatchObject.JSON_PROPERTY_VAULT,
  IngestBatchObject.JSON_PROPERTY_EXTERNAL_OBJECT_ID,
  IngestBatchObject.JSON_PROPERTY_VERSION,
  IngestBatchObject.JSON_PROPERTY_STATE,
  IngestBatchObject.JSON_PROPERTY_REVIEWED_BY,
  IngestBatchObject.JSON_PROPERTY_HAS_ANALYSIS_ERRORS,
  IngestBatchObject.JSON_PROPERTY_HAS_ANALYSIS_WARNINGS
})
@JsonTypeName("IngestBatchObject")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IngestBatchObject {
  public static final String JSON_PROPERTY_INGEST_ID = "ingestId";
  private Long ingestId;

  public static final String JSON_PROPERTY_VAULT = "vault";
  private String vault;

  public static final String JSON_PROPERTY_EXTERNAL_OBJECT_ID = "externalObjectId";
  private String externalObjectId;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;

  public static final String JSON_PROPERTY_STATE = "state";
  private IngestObjectState state;

  public static final String JSON_PROPERTY_REVIEWED_BY = "reviewedBy";
  private String reviewedBy;

  public static final String JSON_PROPERTY_HAS_ANALYSIS_ERRORS = "hasAnalysisErrors";
  private Boolean hasAnalysisErrors;

  public static final String JSON_PROPERTY_HAS_ANALYSIS_WARNINGS = "hasAnalysisWarnings";
  private Boolean hasAnalysisWarnings;

  public IngestBatchObject() { 
  }

  public IngestBatchObject ingestId(Long ingestId) {
    
    this.ingestId = ingestId;
    return this;
  }

   /**
   * The ID for the Ingest Batch
   * @return ingestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "10293", required = true, value = "The ID for the Ingest Batch")
  @JsonProperty(JSON_PROPERTY_INGEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getIngestId() {
    return ingestId;
  }


  @JsonProperty(JSON_PROPERTY_INGEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIngestId(Long ingestId) {
    this.ingestId = ingestId;
  }


  public IngestBatchObject vault(String vault) {
    
    this.vault = vault;
    return this;
  }

   /**
   * The name of the vault
   * @return vault
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "vault-name", required = true, value = "The name of the vault")
  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVault() {
    return vault;
  }


  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVault(String vault) {
    this.vault = vault;
  }


  public IngestBatchObject externalObjectId(String externalObjectId) {
    
    this.externalObjectId = externalObjectId;
    return this;
  }

   /**
   * The external ID of the object
   * @return externalObjectId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1711.dl/ZQ5WPGU2GKBFT8Q", required = true, value = "The external ID of the object")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalObjectId() {
    return externalObjectId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalObjectId(String externalObjectId) {
    this.externalObjectId = externalObjectId;
  }


  public IngestBatchObject version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of an object
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The version of an object")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Integer version) {
    this.version = version;
  }


  public IngestBatchObject state(IngestObjectState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public IngestObjectState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(IngestObjectState state) {
    this.state = state;
  }


  public IngestBatchObject reviewedBy(String reviewedBy) {
    
    this.reviewedBy = reviewedBy;
    return this;
  }

   /**
   * The username of the user who approved/rejected the batch object
   * @return reviewedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username of the user who approved/rejected the batch object")
  @JsonProperty(JSON_PROPERTY_REVIEWED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReviewedBy() {
    return reviewedBy;
  }


  @JsonProperty(JSON_PROPERTY_REVIEWED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReviewedBy(String reviewedBy) {
    this.reviewedBy = reviewedBy;
  }


  public IngestBatchObject hasAnalysisErrors(Boolean hasAnalysisErrors) {
    
    this.hasAnalysisErrors = hasAnalysisErrors;
    return this;
  }

   /**
   * Indicates if there were errors during analysis
   * @return hasAnalysisErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if there were errors during analysis")
  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasAnalysisErrors() {
    return hasAnalysisErrors;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasAnalysisErrors(Boolean hasAnalysisErrors) {
    this.hasAnalysisErrors = hasAnalysisErrors;
  }


  public IngestBatchObject hasAnalysisWarnings(Boolean hasAnalysisWarnings) {
    
    this.hasAnalysisWarnings = hasAnalysisWarnings;
    return this;
  }

   /**
   * Indicates if there were warnings during analysis
   * @return hasAnalysisWarnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if there were warnings during analysis")
  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasAnalysisWarnings() {
    return hasAnalysisWarnings;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasAnalysisWarnings(Boolean hasAnalysisWarnings) {
    this.hasAnalysisWarnings = hasAnalysisWarnings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IngestBatchObject ingestBatchObject = (IngestBatchObject) o;
    return Objects.equals(this.ingestId, ingestBatchObject.ingestId) &&
        Objects.equals(this.vault, ingestBatchObject.vault) &&
        Objects.equals(this.externalObjectId, ingestBatchObject.externalObjectId) &&
        Objects.equals(this.version, ingestBatchObject.version) &&
        Objects.equals(this.state, ingestBatchObject.state) &&
        Objects.equals(this.reviewedBy, ingestBatchObject.reviewedBy) &&
        Objects.equals(this.hasAnalysisErrors, ingestBatchObject.hasAnalysisErrors) &&
        Objects.equals(this.hasAnalysisWarnings, ingestBatchObject.hasAnalysisWarnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingestId, vault, externalObjectId, version, state, reviewedBy, hasAnalysisErrors, hasAnalysisWarnings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IngestBatchObject {\n");
    sb.append("    ingestId: ").append(toIndentedString(ingestId)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    externalObjectId: ").append(toIndentedString(externalObjectId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    reviewedBy: ").append(toIndentedString(reviewedBy)).append("\n");
    sb.append("    hasAnalysisErrors: ").append(toIndentedString(hasAnalysisErrors)).append("\n");
    sb.append("    hasAnalysisWarnings: ").append(toIndentedString(hasAnalysisWarnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

