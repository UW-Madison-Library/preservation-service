/*
 * Preservation Manager Public API
 * Public API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EncodingDiff
 */
@JsonPropertyOrder({
  EncodingDiff.JSON_PROPERTY_ADDED,
  EncodingDiff.JSON_PROPERTY_REMOVED,
  EncodingDiff.JSON_PROPERTY_UNCHANGED
})
@JsonTypeName("EncodingDiff")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EncodingDiff {
  public static final String JSON_PROPERTY_ADDED = "added";
  private List<String> added = null;

  public static final String JSON_PROPERTY_REMOVED = "removed";
  private List<String> removed = null;

  public static final String JSON_PROPERTY_UNCHANGED = "unchanged";
  private List<String> unchanged = null;

  public EncodingDiff() { 
  }

  public EncodingDiff added(List<String> added) {
    
    this.added = added;
    return this;
  }

  public EncodingDiff addAddedItem(String addedItem) {
    if (this.added == null) {
      this.added = new ArrayList<>();
    }
    this.added.add(addedItem);
    return this;
  }

   /**
   * Newly identified encodings
   * @return added
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Newly identified encodings")
  @JsonProperty(JSON_PROPERTY_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAdded() {
    return added;
  }


  @JsonProperty(JSON_PROPERTY_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdded(List<String> added) {
    this.added = added;
  }


  public EncodingDiff removed(List<String> removed) {
    
    this.removed = removed;
    return this;
  }

  public EncodingDiff addRemovedItem(String removedItem) {
    if (this.removed == null) {
      this.removed = new ArrayList<>();
    }
    this.removed.add(removedItem);
    return this;
  }

   /**
   * Removed encodings
   * @return removed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Removed encodings")
  @JsonProperty(JSON_PROPERTY_REMOVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRemoved() {
    return removed;
  }


  @JsonProperty(JSON_PROPERTY_REMOVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemoved(List<String> removed) {
    this.removed = removed;
  }


  public EncodingDiff unchanged(List<String> unchanged) {
    
    this.unchanged = unchanged;
    return this;
  }

  public EncodingDiff addUnchangedItem(String unchangedItem) {
    if (this.unchanged == null) {
      this.unchanged = new ArrayList<>();
    }
    this.unchanged.add(unchangedItem);
    return this;
  }

   /**
   * Unchanged encodings
   * @return unchanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unchanged encodings")
  @JsonProperty(JSON_PROPERTY_UNCHANGED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUnchanged() {
    return unchanged;
  }


  @JsonProperty(JSON_PROPERTY_UNCHANGED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnchanged(List<String> unchanged) {
    this.unchanged = unchanged;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EncodingDiff encodingDiff = (EncodingDiff) o;
    return Objects.equals(this.added, encodingDiff.added) &&
        Objects.equals(this.removed, encodingDiff.removed) &&
        Objects.equals(this.unchanged, encodingDiff.unchanged);
  }

  @Override
  public int hashCode() {
    return Objects.hash(added, removed, unchanged);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EncodingDiff {\n");
    sb.append("    added: ").append(toIndentedString(added)).append("\n");
    sb.append("    removed: ").append(toIndentedString(removed)).append("\n");
    sb.append("    unchanged: ").append(toIndentedString(unchanged)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

