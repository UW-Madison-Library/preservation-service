/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.Job;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.ValidateLocalJobAllOf;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ValidateLocalJob
 */
@JsonPropertyOrder({
  ValidateLocalJob.JSON_PROPERTY_JOB_ID,
  ValidateLocalJob.JSON_PROPERTY_INTERNAL_OBJECT_ID,
  ValidateLocalJob.JSON_PROPERTY_CONTENT_FIXITY_CHECK
})
@JsonTypeName("ValidateLocalJob")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ValidateLocalJob {
  public static final String JSON_PROPERTY_JOB_ID = "jobId";
  private Long jobId;

  public static final String JSON_PROPERTY_INTERNAL_OBJECT_ID = "internalObjectId";
  private String internalObjectId;

  public static final String JSON_PROPERTY_CONTENT_FIXITY_CHECK = "contentFixityCheck";
  private Boolean contentFixityCheck;

  public ValidateLocalJob() { 
  }

  public ValidateLocalJob jobId(Long jobId) {
    
    this.jobId = jobId;
    return this;
  }

   /**
   * The id of a job
   * @return jobId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "10293", required = true, value = "The id of a job")
  @JsonProperty(JSON_PROPERTY_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getJobId() {
    return jobId;
  }


  @JsonProperty(JSON_PROPERTY_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }


  public ValidateLocalJob internalObjectId(String internalObjectId) {
    
    this.internalObjectId = internalObjectId;
    return this;
  }

   /**
   * The internal ID of the object
   * @return internalObjectId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "urn:uuid:3c658673-38aa-4425-b931-2971c45256d3", required = true, value = "The internal ID of the object")
  @JsonProperty(JSON_PROPERTY_INTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInternalObjectId() {
    return internalObjectId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInternalObjectId(String internalObjectId) {
    this.internalObjectId = internalObjectId;
  }


  public ValidateLocalJob contentFixityCheck(Boolean contentFixityCheck) {
    
    this.contentFixityCheck = contentFixityCheck;
    return this;
  }

   /**
   * True if the digests of all files in the ocfl object should be validated
   * @return contentFixityCheck
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "True if the digests of all files in the ocfl object should be validated")
  @JsonProperty(JSON_PROPERTY_CONTENT_FIXITY_CHECK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getContentFixityCheck() {
    return contentFixityCheck;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_FIXITY_CHECK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentFixityCheck(Boolean contentFixityCheck) {
    this.contentFixityCheck = contentFixityCheck;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateLocalJob validateLocalJob = (ValidateLocalJob) o;
    return Objects.equals(this.jobId, validateLocalJob.jobId) &&
        Objects.equals(this.internalObjectId, validateLocalJob.internalObjectId) &&
        Objects.equals(this.contentFixityCheck, validateLocalJob.contentFixityCheck);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, internalObjectId, contentFixityCheck);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateLocalJob {\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    internalObjectId: ").append(toIndentedString(internalObjectId)).append("\n");
    sb.append("    contentFixityCheck: ").append(toIndentedString(contentFixityCheck)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

