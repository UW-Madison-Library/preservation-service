/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.IngestBatchState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Ingest Batch details
 */
@ApiModel(description = "Ingest Batch details")
@JsonPropertyOrder({
  IngestBatch.JSON_PROPERTY_INGEST_ID,
  IngestBatch.JSON_PROPERTY_ORG_NAME,
  IngestBatch.JSON_PROPERTY_VAULT,
  IngestBatch.JSON_PROPERTY_CREATED_BY,
  IngestBatch.JSON_PROPERTY_REVIEWED_BY,
  IngestBatch.JSON_PROPERTY_STATE,
  IngestBatch.JSON_PROPERTY_ORIGINAL_FILENAME,
  IngestBatch.JSON_PROPERTY_FILE_PATH,
  IngestBatch.JSON_PROPERTY_FILE_SIZE,
  IngestBatch.JSON_PROPERTY_HAS_ANALYSIS_ERRORS,
  IngestBatch.JSON_PROPERTY_HAS_ANALYSIS_WARNINGS,
  IngestBatch.JSON_PROPERTY_RECEIVED_TIMESTAMP,
  IngestBatch.JSON_PROPERTY_UPDATED_TIMESTAMP
})
@JsonTypeName("IngestBatch")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IngestBatch {
  public static final String JSON_PROPERTY_INGEST_ID = "ingestId";
  private Long ingestId;

  public static final String JSON_PROPERTY_ORG_NAME = "orgName";
  private String orgName;

  public static final String JSON_PROPERTY_VAULT = "vault";
  private String vault;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private String createdBy;

  public static final String JSON_PROPERTY_REVIEWED_BY = "reviewedBy";
  private String reviewedBy;

  public static final String JSON_PROPERTY_STATE = "state";
  private IngestBatchState state;

  public static final String JSON_PROPERTY_ORIGINAL_FILENAME = "originalFilename";
  private String originalFilename;

  public static final String JSON_PROPERTY_FILE_PATH = "filePath";
  private String filePath;

  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private Long fileSize;

  public static final String JSON_PROPERTY_HAS_ANALYSIS_ERRORS = "hasAnalysisErrors";
  private Boolean hasAnalysisErrors;

  public static final String JSON_PROPERTY_HAS_ANALYSIS_WARNINGS = "hasAnalysisWarnings";
  private Boolean hasAnalysisWarnings;

  public static final String JSON_PROPERTY_RECEIVED_TIMESTAMP = "receivedTimestamp";
  private OffsetDateTime receivedTimestamp;

  public static final String JSON_PROPERTY_UPDATED_TIMESTAMP = "updatedTimestamp";
  private OffsetDateTime updatedTimestamp;

  public IngestBatch() { 
  }

  public IngestBatch ingestId(Long ingestId) {
    
    this.ingestId = ingestId;
    return this;
  }

   /**
   * The ID for the Ingest Batch
   * @return ingestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "10293", required = true, value = "The ID for the Ingest Batch")
  @JsonProperty(JSON_PROPERTY_INGEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getIngestId() {
    return ingestId;
  }


  @JsonProperty(JSON_PROPERTY_INGEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIngestId(Long ingestId) {
    this.ingestId = ingestId;
  }


  public IngestBatch orgName(String orgName) {
    
    this.orgName = orgName;
    return this;
  }

   /**
   * The ID of the organization
   * @return orgName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "organization-id", required = true, value = "The ID of the organization")
  @JsonProperty(JSON_PROPERTY_ORG_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrgName() {
    return orgName;
  }


  @JsonProperty(JSON_PROPERTY_ORG_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrgName(String orgName) {
    this.orgName = orgName;
  }


  public IngestBatch vault(String vault) {
    
    this.vault = vault;
    return this;
  }

   /**
   * The name of the vault
   * @return vault
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "vault-name", required = true, value = "The name of the vault")
  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVault() {
    return vault;
  }


  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVault(String vault) {
    this.vault = vault;
  }


  public IngestBatch createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The username of the user who submitted the batch
   * @return createdBy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The username of the user who submitted the batch")
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public IngestBatch reviewedBy(String reviewedBy) {
    
    this.reviewedBy = reviewedBy;
    return this;
  }

   /**
   * The username of the user who approved/rejected the batch object
   * @return reviewedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username of the user who approved/rejected the batch object")
  @JsonProperty(JSON_PROPERTY_REVIEWED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReviewedBy() {
    return reviewedBy;
  }


  @JsonProperty(JSON_PROPERTY_REVIEWED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReviewedBy(String reviewedBy) {
    this.reviewedBy = reviewedBy;
  }


  public IngestBatch state(IngestBatchState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public IngestBatchState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(IngestBatchState state) {
    this.state = state;
  }


  public IngestBatch originalFilename(String originalFilename) {
    
    this.originalFilename = originalFilename;
    return this;
  }

   /**
   * The name of the file as uploaded
   * @return originalFilename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "bag.zip", value = "The name of the file as uploaded")
  @JsonProperty(JSON_PROPERTY_ORIGINAL_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalFilename() {
    return originalFilename;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalFilename(String originalFilename) {
    this.originalFilename = originalFilename;
  }


  public IngestBatch filePath(String filePath) {
    
    this.filePath = filePath;
    return this;
  }

   /**
   * Path the batch&#39;s archive on disk
   * @return filePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/var/tmp/bag.zip", value = "Path the batch's archive on disk")
  @JsonProperty(JSON_PROPERTY_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilePath() {
    return filePath;
  }


  @JsonProperty(JSON_PROPERTY_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }


  public IngestBatch fileSize(Long fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Bag size in bytes
   * @return fileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1024", value = "Bag size in bytes")
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }


  public IngestBatch hasAnalysisErrors(Boolean hasAnalysisErrors) {
    
    this.hasAnalysisErrors = hasAnalysisErrors;
    return this;
  }

   /**
   * Indicates if there were errors during analysis
   * @return hasAnalysisErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if there were errors during analysis")
  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasAnalysisErrors() {
    return hasAnalysisErrors;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasAnalysisErrors(Boolean hasAnalysisErrors) {
    this.hasAnalysisErrors = hasAnalysisErrors;
  }


  public IngestBatch hasAnalysisWarnings(Boolean hasAnalysisWarnings) {
    
    this.hasAnalysisWarnings = hasAnalysisWarnings;
    return this;
  }

   /**
   * Indicates if there were warnings during analysis
   * @return hasAnalysisWarnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if there were warnings during analysis")
  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasAnalysisWarnings() {
    return hasAnalysisWarnings;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ANALYSIS_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasAnalysisWarnings(Boolean hasAnalysisWarnings) {
    this.hasAnalysisWarnings = hasAnalysisWarnings;
  }


  public IngestBatch receivedTimestamp(OffsetDateTime receivedTimestamp) {
    
    this.receivedTimestamp = receivedTimestamp;
    return this;
  }

   /**
   * UTC timestamp when the batch was received
   * @return receivedTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2018-12-27T20:50:06.907193Z", required = true, value = "UTC timestamp when the batch was received")
  @JsonProperty(JSON_PROPERTY_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getReceivedTimestamp() {
    return receivedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceivedTimestamp(OffsetDateTime receivedTimestamp) {
    this.receivedTimestamp = receivedTimestamp;
  }


  public IngestBatch updatedTimestamp(OffsetDateTime updatedTimestamp) {
    
    this.updatedTimestamp = updatedTimestamp;
    return this;
  }

   /**
   * UTC timestamp when the batch was last updated
   * @return updatedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-12-27T20:50:09.189558Z", value = "UTC timestamp when the batch was last updated")
  @JsonProperty(JSON_PROPERTY_UPDATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedTimestamp() {
    return updatedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedTimestamp(OffsetDateTime updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IngestBatch ingestBatch = (IngestBatch) o;
    return Objects.equals(this.ingestId, ingestBatch.ingestId) &&
        Objects.equals(this.orgName, ingestBatch.orgName) &&
        Objects.equals(this.vault, ingestBatch.vault) &&
        Objects.equals(this.createdBy, ingestBatch.createdBy) &&
        Objects.equals(this.reviewedBy, ingestBatch.reviewedBy) &&
        Objects.equals(this.state, ingestBatch.state) &&
        Objects.equals(this.originalFilename, ingestBatch.originalFilename) &&
        Objects.equals(this.filePath, ingestBatch.filePath) &&
        Objects.equals(this.fileSize, ingestBatch.fileSize) &&
        Objects.equals(this.hasAnalysisErrors, ingestBatch.hasAnalysisErrors) &&
        Objects.equals(this.hasAnalysisWarnings, ingestBatch.hasAnalysisWarnings) &&
        Objects.equals(this.receivedTimestamp, ingestBatch.receivedTimestamp) &&
        Objects.equals(this.updatedTimestamp, ingestBatch.updatedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingestId, orgName, vault, createdBy, reviewedBy, state, originalFilename, filePath, fileSize, hasAnalysisErrors, hasAnalysisWarnings, receivedTimestamp, updatedTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IngestBatch {\n");
    sb.append("    ingestId: ").append(toIndentedString(ingestId)).append("\n");
    sb.append("    orgName: ").append(toIndentedString(orgName)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    reviewedBy: ").append(toIndentedString(reviewedBy)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    originalFilename: ").append(toIndentedString(originalFilename)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    hasAnalysisErrors: ").append(toIndentedString(hasAnalysisErrors)).append("\n");
    sb.append("    hasAnalysisWarnings: ").append(toIndentedString(hasAnalysisWarnings)).append("\n");
    sb.append("    receivedTimestamp: ").append(toIndentedString(receivedTimestamp)).append("\n");
    sb.append("    updatedTimestamp: ").append(toIndentedString(updatedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

