/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.IngestObjectState;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.ObjectFile;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object within an Ingest Batch
 */
@ApiModel(description = "An object within an Ingest Batch")
@JsonPropertyOrder({
  BatchObjectWithFiles.JSON_PROPERTY_INGEST_OBJECT_ID,
  BatchObjectWithFiles.JSON_PROPERTY_INGEST_ID,
  BatchObjectWithFiles.JSON_PROPERTY_EXTERNAL_OBJECT_ID,
  BatchObjectWithFiles.JSON_PROPERTY_OBJECT_ROOT_PATH,
  BatchObjectWithFiles.JSON_PROPERTY_STATE,
  BatchObjectWithFiles.JSON_PROPERTY_INTERNAL_OBJECT_ID,
  BatchObjectWithFiles.JSON_PROPERTY_HEAD_PERSISTENCE_VERSION,
  BatchObjectWithFiles.JSON_PROPERTY_APPROVER_NAME,
  BatchObjectWithFiles.JSON_PROPERTY_APPROVER_ADDRESS,
  BatchObjectWithFiles.JSON_PROPERTY_FILES
})
@JsonTypeName("BatchObjectWithFiles")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BatchObjectWithFiles {
  public static final String JSON_PROPERTY_INGEST_OBJECT_ID = "ingestObjectId";
  private Long ingestObjectId;

  public static final String JSON_PROPERTY_INGEST_ID = "ingestId";
  private Long ingestId;

  public static final String JSON_PROPERTY_EXTERNAL_OBJECT_ID = "externalObjectId";
  private String externalObjectId;

  public static final String JSON_PROPERTY_OBJECT_ROOT_PATH = "objectRootPath";
  private String objectRootPath;

  public static final String JSON_PROPERTY_STATE = "state";
  private IngestObjectState state;

  public static final String JSON_PROPERTY_INTERNAL_OBJECT_ID = "internalObjectId";
  private String internalObjectId;

  public static final String JSON_PROPERTY_HEAD_PERSISTENCE_VERSION = "headPersistenceVersion";
  private String headPersistenceVersion;

  public static final String JSON_PROPERTY_APPROVER_NAME = "approverName";
  private String approverName;

  public static final String JSON_PROPERTY_APPROVER_ADDRESS = "approverAddress";
  private String approverAddress;

  public static final String JSON_PROPERTY_FILES = "files";
  private List<ObjectFile> files = null;

  public BatchObjectWithFiles() { 
  }

  public BatchObjectWithFiles ingestObjectId(Long ingestObjectId) {
    
    this.ingestObjectId = ingestObjectId;
    return this;
  }

   /**
   * The ID of the object within the batch
   * @return ingestObjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10293", value = "The ID of the object within the batch")
  @JsonProperty(JSON_PROPERTY_INGEST_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getIngestObjectId() {
    return ingestObjectId;
  }


  @JsonProperty(JSON_PROPERTY_INGEST_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIngestObjectId(Long ingestObjectId) {
    this.ingestObjectId = ingestObjectId;
  }


  public BatchObjectWithFiles ingestId(Long ingestId) {
    
    this.ingestId = ingestId;
    return this;
  }

   /**
   * The ID for the Ingest Batch
   * @return ingestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10293", value = "The ID for the Ingest Batch")
  @JsonProperty(JSON_PROPERTY_INGEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getIngestId() {
    return ingestId;
  }


  @JsonProperty(JSON_PROPERTY_INGEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIngestId(Long ingestId) {
    this.ingestId = ingestId;
  }


  public BatchObjectWithFiles externalObjectId(String externalObjectId) {
    
    this.externalObjectId = externalObjectId;
    return this;
  }

   /**
   * The external ID of the object
   * @return externalObjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1711.dl/ZQ5WPGU2GKBFT8Q", value = "The external ID of the object")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalObjectId() {
    return externalObjectId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalObjectId(String externalObjectId) {
    this.externalObjectId = externalObjectId;
  }


  public BatchObjectWithFiles objectRootPath(String objectRootPath) {
    
    this.objectRootPath = objectRootPath;
    return this;
  }

   /**
   * The path to the object root on disk
   * @return objectRootPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/data/processing/obj123", value = "The path to the object root on disk")
  @JsonProperty(JSON_PROPERTY_OBJECT_ROOT_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getObjectRootPath() {
    return objectRootPath;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_ROOT_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectRootPath(String objectRootPath) {
    this.objectRootPath = objectRootPath;
  }


  public BatchObjectWithFiles state(IngestObjectState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IngestObjectState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(IngestObjectState state) {
    this.state = state;
  }


  public BatchObjectWithFiles internalObjectId(String internalObjectId) {
    
    this.internalObjectId = internalObjectId;
    return this;
  }

   /**
   * The internal ID of the object
   * @return internalObjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "urn:uuid:3c658673-38aa-4425-b931-2971c45256d3", value = "The internal ID of the object")
  @JsonProperty(JSON_PROPERTY_INTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalObjectId() {
    return internalObjectId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalObjectId(String internalObjectId) {
    this.internalObjectId = internalObjectId;
  }


  public BatchObjectWithFiles headPersistenceVersion(String headPersistenceVersion) {
    
    this.headPersistenceVersion = headPersistenceVersion;
    return this;
  }

   /**
   * The version identifier of the object version
   * @return headPersistenceVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "v2", value = "The version identifier of the object version")
  @JsonProperty(JSON_PROPERTY_HEAD_PERSISTENCE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeadPersistenceVersion() {
    return headPersistenceVersion;
  }


  @JsonProperty(JSON_PROPERTY_HEAD_PERSISTENCE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeadPersistenceVersion(String headPersistenceVersion) {
    this.headPersistenceVersion = headPersistenceVersion;
  }


  public BatchObjectWithFiles approverName(String approverName) {
    
    this.approverName = approverName;
    return this;
  }

   /**
   * The display name of the user who approved the object
   * @return approverName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the user who approved the object")
  @JsonProperty(JSON_PROPERTY_APPROVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApproverName() {
    return approverName;
  }


  @JsonProperty(JSON_PROPERTY_APPROVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproverName(String approverName) {
    this.approverName = approverName;
  }


  public BatchObjectWithFiles approverAddress(String approverAddress) {
    
    this.approverAddress = approverAddress;
    return this;
  }

   /**
   * The address or id of the user who approved the object, should be a URI
   * @return approverAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "person@example.com", value = "The address or id of the user who approved the object, should be a URI")
  @JsonProperty(JSON_PROPERTY_APPROVER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApproverAddress() {
    return approverAddress;
  }


  @JsonProperty(JSON_PROPERTY_APPROVER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproverAddress(String approverAddress) {
    this.approverAddress = approverAddress;
  }


  public BatchObjectWithFiles files(List<ObjectFile> files) {
    
    this.files = files;
    return this;
  }

  public BatchObjectWithFiles addFilesItem(ObjectFile filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * The files associated to the object
   * @return files
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The files associated to the object")
  @JsonProperty(JSON_PROPERTY_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ObjectFile> getFiles() {
    return files;
  }


  @JsonProperty(JSON_PROPERTY_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiles(List<ObjectFile> files) {
    this.files = files;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchObjectWithFiles batchObjectWithFiles = (BatchObjectWithFiles) o;
    return Objects.equals(this.ingestObjectId, batchObjectWithFiles.ingestObjectId) &&
        Objects.equals(this.ingestId, batchObjectWithFiles.ingestId) &&
        Objects.equals(this.externalObjectId, batchObjectWithFiles.externalObjectId) &&
        Objects.equals(this.objectRootPath, batchObjectWithFiles.objectRootPath) &&
        Objects.equals(this.state, batchObjectWithFiles.state) &&
        Objects.equals(this.internalObjectId, batchObjectWithFiles.internalObjectId) &&
        Objects.equals(this.headPersistenceVersion, batchObjectWithFiles.headPersistenceVersion) &&
        Objects.equals(this.approverName, batchObjectWithFiles.approverName) &&
        Objects.equals(this.approverAddress, batchObjectWithFiles.approverAddress) &&
        Objects.equals(this.files, batchObjectWithFiles.files);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingestObjectId, ingestId, externalObjectId, objectRootPath, state, internalObjectId, headPersistenceVersion, approverName, approverAddress, files);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchObjectWithFiles {\n");
    sb.append("    ingestObjectId: ").append(toIndentedString(ingestObjectId)).append("\n");
    sb.append("    ingestId: ").append(toIndentedString(ingestId)).append("\n");
    sb.append("    externalObjectId: ").append(toIndentedString(externalObjectId)).append("\n");
    sb.append("    objectRootPath: ").append(toIndentedString(objectRootPath)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    internalObjectId: ").append(toIndentedString(internalObjectId)).append("\n");
    sb.append("    headPersistenceVersion: ").append(toIndentedString(headPersistenceVersion)).append("\n");
    sb.append("    approverName: ").append(toIndentedString(approverName)).append("\n");
    sb.append("    approverAddress: ").append(toIndentedString(approverAddress)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

