/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.FileEncoding;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.FileFormat;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.FileValidity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RegisterIngestObjectFileDetailsRequest
 */
@JsonPropertyOrder({
  RegisterIngestObjectFileDetailsRequest.JSON_PROPERTY_INGEST_FILE_ID,
  RegisterIngestObjectFileDetailsRequest.JSON_PROPERTY_SHA256_DIGEST,
  RegisterIngestObjectFileDetailsRequest.JSON_PROPERTY_FILE_SIZE,
  RegisterIngestObjectFileDetailsRequest.JSON_PROPERTY_FORMATS,
  RegisterIngestObjectFileDetailsRequest.JSON_PROPERTY_ENCODING,
  RegisterIngestObjectFileDetailsRequest.JSON_PROPERTY_VALIDITY
})
@JsonTypeName("RegisterIngestObjectFileDetailsRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RegisterIngestObjectFileDetailsRequest {
  public static final String JSON_PROPERTY_INGEST_FILE_ID = "ingestFileId";
  private Long ingestFileId;

  public static final String JSON_PROPERTY_SHA256_DIGEST = "sha256Digest";
  private String sha256Digest;

  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private Long fileSize;

  public static final String JSON_PROPERTY_FORMATS = "formats";
  private List<FileFormat> formats = null;

  public static final String JSON_PROPERTY_ENCODING = "encoding";
  private List<FileEncoding> encoding = null;

  public static final String JSON_PROPERTY_VALIDITY = "validity";
  private List<FileValidity> validity = null;

  public RegisterIngestObjectFileDetailsRequest() { 
  }

  public RegisterIngestObjectFileDetailsRequest ingestFileId(Long ingestFileId) {
    
    this.ingestFileId = ingestFileId;
    return this;
  }

   /**
   * The ID of the file
   * @return ingestFileId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "10293", required = true, value = "The ID of the file")
  @JsonProperty(JSON_PROPERTY_INGEST_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getIngestFileId() {
    return ingestFileId;
  }


  @JsonProperty(JSON_PROPERTY_INGEST_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIngestFileId(Long ingestFileId) {
    this.ingestFileId = ingestFileId;
  }


  public RegisterIngestObjectFileDetailsRequest sha256Digest(String sha256Digest) {
    
    this.sha256Digest = sha256Digest;
    return this;
  }

   /**
   * The sha256 digest of the file
   * @return sha256Digest
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1ff0a30eedd7819f4552179c94ea89ed03f5d1a4265fcd0f971ebe7bc17317cf", required = true, value = "The sha256 digest of the file")
  @JsonProperty(JSON_PROPERTY_SHA256_DIGEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSha256Digest() {
    return sha256Digest;
  }


  @JsonProperty(JSON_PROPERTY_SHA256_DIGEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSha256Digest(String sha256Digest) {
    this.sha256Digest = sha256Digest;
  }


  public RegisterIngestObjectFileDetailsRequest fileSize(Long fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Size of the file in bytes
   * @return fileSize
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1024", required = true, value = "Size of the file in bytes")
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }


  public RegisterIngestObjectFileDetailsRequest formats(List<FileFormat> formats) {
    
    this.formats = formats;
    return this;
  }

  public RegisterIngestObjectFileDetailsRequest addFormatsItem(FileFormat formatsItem) {
    if (this.formats == null) {
      this.formats = new ArrayList<>();
    }
    this.formats.add(formatsItem);
    return this;
  }

   /**
   * The format of the file
   * @return formats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The format of the file")
  @JsonProperty(JSON_PROPERTY_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FileFormat> getFormats() {
    return formats;
  }


  @JsonProperty(JSON_PROPERTY_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormats(List<FileFormat> formats) {
    this.formats = formats;
  }


  public RegisterIngestObjectFileDetailsRequest encoding(List<FileEncoding> encoding) {
    
    this.encoding = encoding;
    return this;
  }

  public RegisterIngestObjectFileDetailsRequest addEncodingItem(FileEncoding encodingItem) {
    if (this.encoding == null) {
      this.encoding = new ArrayList<>();
    }
    this.encoding.add(encodingItem);
    return this;
  }

   /**
   * The encoding of the file
   * @return encoding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encoding of the file")
  @JsonProperty(JSON_PROPERTY_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FileEncoding> getEncoding() {
    return encoding;
  }


  @JsonProperty(JSON_PROPERTY_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncoding(List<FileEncoding> encoding) {
    this.encoding = encoding;
  }


  public RegisterIngestObjectFileDetailsRequest validity(List<FileValidity> validity) {
    
    this.validity = validity;
    return this;
  }

  public RegisterIngestObjectFileDetailsRequest addValidityItem(FileValidity validityItem) {
    if (this.validity == null) {
      this.validity = new ArrayList<>();
    }
    this.validity.add(validityItem);
    return this;
  }

   /**
   * The validity of the file
   * @return validity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The validity of the file")
  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FileValidity> getValidity() {
    return validity;
  }


  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidity(List<FileValidity> validity) {
    this.validity = validity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterIngestObjectFileDetailsRequest registerIngestObjectFileDetailsRequest = (RegisterIngestObjectFileDetailsRequest) o;
    return Objects.equals(this.ingestFileId, registerIngestObjectFileDetailsRequest.ingestFileId) &&
        Objects.equals(this.sha256Digest, registerIngestObjectFileDetailsRequest.sha256Digest) &&
        Objects.equals(this.fileSize, registerIngestObjectFileDetailsRequest.fileSize) &&
        Objects.equals(this.formats, registerIngestObjectFileDetailsRequest.formats) &&
        Objects.equals(this.encoding, registerIngestObjectFileDetailsRequest.encoding) &&
        Objects.equals(this.validity, registerIngestObjectFileDetailsRequest.validity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingestFileId, sha256Digest, fileSize, formats, encoding, validity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterIngestObjectFileDetailsRequest {\n");
    sb.append("    ingestFileId: ").append(toIndentedString(ingestFileId)).append("\n");
    sb.append("    sha256Digest: ").append(toIndentedString(sha256Digest)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    formats: ").append(toIndentedString(formats)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

