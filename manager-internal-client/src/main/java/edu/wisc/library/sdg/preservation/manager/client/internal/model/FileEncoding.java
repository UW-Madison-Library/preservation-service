/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Encoding for a file
 */
@ApiModel(description = "Encoding for a file")
@JsonPropertyOrder({
  FileEncoding.JSON_PROPERTY_ENCODING,
  FileEncoding.JSON_PROPERTY_SOURCE
})
@JsonTypeName("FileEncoding")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FileEncoding {
  public static final String JSON_PROPERTY_ENCODING = "encoding";
  private String encoding;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public FileEncoding() { 
  }

  public FileEncoding encoding(String encoding) {
    
    this.encoding = encoding;
    return this;
  }

   /**
   * The file encoding
   * @return encoding
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "utf-8", required = true, value = "The file encoding")
  @JsonProperty(JSON_PROPERTY_ENCODING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEncoding() {
    return encoding;
  }


  @JsonProperty(JSON_PROPERTY_ENCODING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEncoding(String encoding) {
    this.encoding = encoding;
  }


  public FileEncoding source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * The source of the identification
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "USER when specified by the user; otherwise tool id, eg Droid-6.4 when identified by Droid", required = true, value = "The source of the identification")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(String source) {
    this.source = source;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileEncoding fileEncoding = (FileEncoding) o;
    return Objects.equals(this.encoding, fileEncoding.encoding) &&
        Objects.equals(this.source, fileEncoding.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encoding, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileEncoding {\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

