/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeleteDipJobAllOf
 */
@JsonPropertyOrder({
  DeleteDipJobAllOf.JSON_PROPERTY_RETRIEVE_REQUEST_ID,
  DeleteDipJobAllOf.JSON_PROPERTY_RETRIEVE_JOB_IDS
})
@JsonTypeName("DeleteDipJob_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DeleteDipJobAllOf {
  public static final String JSON_PROPERTY_RETRIEVE_REQUEST_ID = "retrieveRequestId";
  private Long retrieveRequestId;

  public static final String JSON_PROPERTY_RETRIEVE_JOB_IDS = "retrieveJobIds";
  private List<Long> retrieveJobIds = new ArrayList<>();

  public DeleteDipJobAllOf() { 
  }

  public DeleteDipJobAllOf retrieveRequestId(Long retrieveRequestId) {
    
    this.retrieveRequestId = retrieveRequestId;
    return this;
  }

   /**
   * The id of the retrieval request
   * @return retrieveRequestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "10293", required = true, value = "The id of the retrieval request")
  @JsonProperty(JSON_PROPERTY_RETRIEVE_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getRetrieveRequestId() {
    return retrieveRequestId;
  }


  @JsonProperty(JSON_PROPERTY_RETRIEVE_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRetrieveRequestId(Long retrieveRequestId) {
    this.retrieveRequestId = retrieveRequestId;
  }


  public DeleteDipJobAllOf retrieveJobIds(List<Long> retrieveJobIds) {
    
    this.retrieveJobIds = retrieveJobIds;
    return this;
  }

  public DeleteDipJobAllOf addRetrieveJobIdsItem(Long retrieveJobIdsItem) {
    this.retrieveJobIds.add(retrieveJobIdsItem);
    return this;
  }

   /**
   * The job ids that are part of the retrieve request
   * @return retrieveJobIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The job ids that are part of the retrieve request")
  @JsonProperty(JSON_PROPERTY_RETRIEVE_JOB_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Long> getRetrieveJobIds() {
    return retrieveJobIds;
  }


  @JsonProperty(JSON_PROPERTY_RETRIEVE_JOB_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRetrieveJobIds(List<Long> retrieveJobIds) {
    this.retrieveJobIds = retrieveJobIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteDipJobAllOf deleteDipJobAllOf = (DeleteDipJobAllOf) o;
    return Objects.equals(this.retrieveRequestId, deleteDipJobAllOf.retrieveRequestId) &&
        Objects.equals(this.retrieveJobIds, deleteDipJobAllOf.retrieveJobIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(retrieveRequestId, retrieveJobIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteDipJobAllOf {\n");
    sb.append("    retrieveRequestId: ").append(toIndentedString(retrieveRequestId)).append("\n");
    sb.append("    retrieveJobIds: ").append(toIndentedString(retrieveJobIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

