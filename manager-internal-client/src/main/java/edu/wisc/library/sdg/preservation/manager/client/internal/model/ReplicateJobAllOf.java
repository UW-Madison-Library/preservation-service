/*
 * Preservation Manager Internal API
 * Internal API for the Preservation Manager.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package edu.wisc.library.sdg.preservation.manager.client.internal.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.wisc.library.sdg.preservation.manager.client.internal.model.DataStore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReplicateJobAllOf
 */
@JsonPropertyOrder({
  ReplicateJobAllOf.JSON_PROPERTY_INTERNAL_OBJECT_ID,
  ReplicateJobAllOf.JSON_PROPERTY_VAULT,
  ReplicateJobAllOf.JSON_PROPERTY_EXTERNAL_OBJECT_ID,
  ReplicateJobAllOf.JSON_PROPERTY_PERSISTENCE_VERSION,
  ReplicateJobAllOf.JSON_PROPERTY_SOURCE,
  ReplicateJobAllOf.JSON_PROPERTY_DESTINATION
})
@JsonTypeName("ReplicateJob_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReplicateJobAllOf {
  public static final String JSON_PROPERTY_INTERNAL_OBJECT_ID = "internalObjectId";
  private String internalObjectId;

  public static final String JSON_PROPERTY_VAULT = "vault";
  private String vault;

  public static final String JSON_PROPERTY_EXTERNAL_OBJECT_ID = "externalObjectId";
  private String externalObjectId;

  public static final String JSON_PROPERTY_PERSISTENCE_VERSION = "persistenceVersion";
  private String persistenceVersion;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private DataStore source;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private DataStore destination;

  public ReplicateJobAllOf() { 
  }

  public ReplicateJobAllOf internalObjectId(String internalObjectId) {
    
    this.internalObjectId = internalObjectId;
    return this;
  }

   /**
   * The internal ID of the object
   * @return internalObjectId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "urn:uuid:3c658673-38aa-4425-b931-2971c45256d3", required = true, value = "The internal ID of the object")
  @JsonProperty(JSON_PROPERTY_INTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInternalObjectId() {
    return internalObjectId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInternalObjectId(String internalObjectId) {
    this.internalObjectId = internalObjectId;
  }


  public ReplicateJobAllOf vault(String vault) {
    
    this.vault = vault;
    return this;
  }

   /**
   * The name of the vault
   * @return vault
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "vault-name", required = true, value = "The name of the vault")
  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVault() {
    return vault;
  }


  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVault(String vault) {
    this.vault = vault;
  }


  public ReplicateJobAllOf externalObjectId(String externalObjectId) {
    
    this.externalObjectId = externalObjectId;
    return this;
  }

   /**
   * The external ID of the object
   * @return externalObjectId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1711.dl/ZQ5WPGU2GKBFT8Q", required = true, value = "The external ID of the object")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalObjectId() {
    return externalObjectId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalObjectId(String externalObjectId) {
    this.externalObjectId = externalObjectId;
  }


  public ReplicateJobAllOf persistenceVersion(String persistenceVersion) {
    
    this.persistenceVersion = persistenceVersion;
    return this;
  }

   /**
   * The version identifier of the object version
   * @return persistenceVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "v2", required = true, value = "The version identifier of the object version")
  @JsonProperty(JSON_PROPERTY_PERSISTENCE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPersistenceVersion() {
    return persistenceVersion;
  }


  @JsonProperty(JSON_PROPERTY_PERSISTENCE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPersistenceVersion(String persistenceVersion) {
    this.persistenceVersion = persistenceVersion;
  }


  public ReplicateJobAllOf source(DataStore source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DataStore getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(DataStore source) {
    this.source = source;
  }


  public ReplicateJobAllOf destination(DataStore destination) {
    
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DataStore getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(DataStore destination) {
    this.destination = destination;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplicateJobAllOf replicateJobAllOf = (ReplicateJobAllOf) o;
    return Objects.equals(this.internalObjectId, replicateJobAllOf.internalObjectId) &&
        Objects.equals(this.vault, replicateJobAllOf.vault) &&
        Objects.equals(this.externalObjectId, replicateJobAllOf.externalObjectId) &&
        Objects.equals(this.persistenceVersion, replicateJobAllOf.persistenceVersion) &&
        Objects.equals(this.source, replicateJobAllOf.source) &&
        Objects.equals(this.destination, replicateJobAllOf.destination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalObjectId, vault, externalObjectId, persistenceVersion, source, destination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplicateJobAllOf {\n");
    sb.append("    internalObjectId: ").append(toIndentedString(internalObjectId)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    externalObjectId: ").append(toIndentedString(externalObjectId)).append("\n");
    sb.append("    persistenceVersion: ").append(toIndentedString(persistenceVersion)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

